{
  "name": "gemini-cli-on-vscode",
  "displayName": "Gemini CLI on VSCode",
  "icon": "images/icon.png",
  "description": "Run Gemini & Codex CLI (GPT-5) in editor panes like Claude Code - no more terminal switching",
  "publisher": "d3j",
  "author": "Joji Jorge Senda",
  "repository": {
    "type": "git",
    "url": "https://github.com/d3j/gemini-cli-on-vscode.git"
  },
  "bugs": {
    "url": "https://github.com/d3j/gemini-cli-on-vscode/issues"
  },
  "keywords": [
    "gemini",
    "codex",
    "gpt-5",
    "openai",
    "google",
    "ai",
    "cli",
    "terminal"
  ],
  "version": "0.0.7",
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:gemini-cli-vscode.start"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "gemini-cli-vscode.startInNewPane",
        "title": "Gemini CLI: Start in New Pane",
        "icon": "images/icon.png"
      },
      {
        "command": "gemini-cli-vscode.startInActivePane",
        "title": "Gemini CLI: Start in Active Pane"
      },
      {
        "command": "gemini-cli-vscode.codexStartInNewPane",
        "title": "Codex CLI: Start in New Pane",
        "icon": "images/codex-icon.png"
      },
      {
        "command": "gemini-cli-vscode.codexStartInActivePane",
        "title": "Codex CLI: Start in Active Pane"
      },
      {
        "command": "gemini-cli-vscode.saveClipboardToHistory",
        "title": "Save to History"
      },
      {
        "command": "gemini-cli-vscode.sendSelectedTextToGemini",
        "title": "Gemini CLI: Send Selected Text"
      },
      {
        "command": "gemini-cli-vscode.sendSelectedTextToCodex",
        "title": "Codex CLI: Send Selected Text"
      },
      {
        "command": "gemini-cli-vscode.sendFilePathToGemini",
        "title": "Gemini CLI: Send File Path"
      },
      {
        "command": "gemini-cli-vscode.sendFilePathToCodex",
        "title": "Codex CLI: Send File Path"
      },
      {
        "command": "gemini-cli-vscode.sendOpenFilePathToGemini",
        "title": "Gemini CLI: Send Open File Path"
      },
      {
        "command": "gemini-cli-vscode.sendOpenFilePathToCodex",
        "title": "Codex CLI: Send Open File Path"
      }
    ],
    "menus": {
      "editor/title": [
        {
          "command": "gemini-cli-vscode.startInNewPane",
          "group": "navigation",
          "when": "config.gemini-cli-vscode.gemini.enabled"
        },
        {
          "command": "gemini-cli-vscode.codexStartInNewPane",
          "group": "navigation",
          "when": "config.gemini-cli-vscode.codex.enabled"
        }
      ],
      "editor/context": [
        {
          "command": "gemini-cli-vscode.sendOpenFilePathToGemini",
          "group": "5_cutcopypaste@99",
          "when": "editorTextFocus && config.gemini-cli-vscode.gemini.enabled && config.gemini-cli-vscode.gemini.showInContextMenu"
        },
        {
          "command": "gemini-cli-vscode.sendOpenFilePathToCodex",
          "group": "5_cutcopypaste@100",
          "when": "editorTextFocus && config.gemini-cli-vscode.codex.enabled && config.gemini-cli-vscode.codex.showInContextMenu"
        },
        {
          "command": "gemini-cli-vscode.sendSelectedTextToGemini",
          "group": "5_cutcopypaste@101",
          "when": "editorHasSelection && config.gemini-cli-vscode.gemini.enabled && config.gemini-cli-vscode.gemini.showInContextMenu"
        },
        {
          "command": "gemini-cli-vscode.sendSelectedTextToCodex",
          "group": "5_cutcopypaste@102",
          "when": "editorHasSelection && config.gemini-cli-vscode.codex.enabled && config.gemini-cli-vscode.codex.showInContextMenu"
        }
      ],
      "explorer/context": [
        {
          "command": "gemini-cli-vscode.sendFilePathToGemini",
          "group": "5_cutcopypaste@103",
          "when": "config.gemini-cli-vscode.gemini.enabled && config.gemini-cli-vscode.gemini.showInContextMenu"
        },
        {
          "command": "gemini-cli-vscode.sendFilePathToCodex",
          "group": "5_cutcopypaste@104",
          "when": "config.gemini-cli-vscode.codex.enabled && config.gemini-cli-vscode.codex.showInContextMenu"
        }
      ],
      "editor/title/context": [
        {
          "command": "gemini-cli-vscode.sendFilePathToGemini",
          "group": "5_cutcopypaste@105",
          "when": "config.gemini-cli-vscode.gemini.enabled && config.gemini-cli-vscode.gemini.showInContextMenu"
        },
        {
          "command": "gemini-cli-vscode.sendFilePathToCodex",
          "group": "5_cutcopypaste@106",
          "when": "config.gemini-cli-vscode.codex.enabled && config.gemini-cli-vscode.codex.showInContextMenu"
        }
      ]
    },
    "keybindings": [],
    "configuration": {
      "title": "Gemini CLI on VSCode",
      "properties": {
        "gemini-cli-vscode.gemini.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable Gemini CLI features"
        },
        "gemini-cli-vscode.codex.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable Codex CLI features"
        },
        "gemini-cli-vscode.gemini.showInContextMenu": {
          "type": "boolean",
          "default": true,
          "description": "Show Gemini CLI commands in context menus"
        },
        "gemini-cli-vscode.codex.showInContextMenu": {
          "type": "boolean",
          "default": true,
          "description": "Show Codex CLI commands in context menus"
        },
        "gemini-cli-vscode.saveToHistory.showStatusBar": {
          "type": "boolean",
          "default": true,
          "description": "Show 'Save to History' button in status bar when terminal is active"
        },
        "gemini-cli-vscode.saveToHistory.includeTerminalName": {
          "type": "boolean",
          "default": true,
          "description": "Include terminal name in history entries"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "vscode-test",
    "test:unit": "npm run compile && vscode-test --config .vscode-test-unit.mjs",
    "test:integration": "npm run compile && vscode-test --run out/test/integration/**/*.test.js",
    "test:coverage": "npm run compile && nyc vscode-test",
    "test:watch": "npm run compile && vscode-test --watch"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.6",
    "@types/node": "18.x",
    "@types/sinon": "^17.0.4",
    "@types/vscode": "^1.85.0",
    "@typescript-eslint/eslint-plugin": "^8.39.0",
    "@typescript-eslint/parser": "^8.39.0",
    "@vscode/test-cli": "^0.0.4",
    "@vscode/test-electron": "^2.3.9",
    "eslint": "^8.56.0",
    "nyc": "^17.1.0",
    "sinon": "^21.0.0",
    "typescript": "^5.3.3"
  }
}
